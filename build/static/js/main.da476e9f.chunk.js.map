{"version":3,"sources":["components/Header/Header.js","components/Recommend/Recommend.js","components/Frontend/Frontend.js","components/Andriod/Android.js","components/Layout/Layout.js","components/Home/Home.js","components/Activity/Activity.js","components/State/State.js","components/Post/Post.js","components/Error/Error.js","components/Main/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","active","match","location","pathname","test","react_default","a","createElement","Link","to","className","src","alt","NavLink","isActive","this","Component","Recommend","Frontend","Android","Layout","_this$props","props","children","concat","defaultProps","Home","components_Layout_Layout","exact","Route","component","path","Andriod","Activity","State","Post","state","post","postId","parseInt","params","setState","Error","Main","Fragment","Switch","Errors","render","indexOf","components_Home_Home","Redirect","from","App","BrowserRouter","components_Header_Header","components_Main_Main","Boolean","window","hostname","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da476e9f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink,Link} from 'react-router-dom';\nimport './header.css'\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <Link to=\"/\" className=\"logo\"><img src=\"https://b-gold-cdn.xitu.io/v3/static/img/logo.a7995ad.svg\" alt=\"\"/></Link>\n                <ul className=\"nav\">\n                {/* activeClassName 属性:当 to 的路径和 当前路径匹配时 此时的 active 就加上了选中的样式 ,默认给的就是 active ,所以要都改名才可以*/}\n                    <li><NavLink to=\"/\" isActive={this.active}>首页</NavLink></li>\n                    <li><NavLink to=\"/state\">动态</NavLink></li>\n                    {/* <li><NavLink to=\"/pumphlet\">小册</NavLink></li>\n                    <li><NavLink to=\"/opensource\">开源库</NavLink></li> */}\n                    <li><NavLink to=\"/activity\">活动</NavLink></li> \n                </ul>\n            </header>\n        );\n    }\n    active=(match,location)=>{\n        const re= /home/\n        const {pathname} = location\n        if(pathname ==='/'||re.test(pathname)){\n            return true\n        }else{\n            return false\n        }\n        \n    }\n}\nexport default Header;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nclass Recommend extends Component {\n    render() {\n        return (\n            <div>\n               <ul>\n                   <li>\n                       <Link to=\"/post/1\">程序猿生存指南-32 实习招聘（下）</Link>\n                   </li>\n                   <li>\n                       <Link to=\"/post/2\">盘点 CSS Selectors Level 4 中新增的选择器</Link>\n                   </li>\n                   <li>\n                       <Link to=\"/post/3\">如何正确的提出一个 Issue ？</Link>\n                   </li>\n               </ul>\n            </div>\n        );\n    }\n}\n\nexport default Recommend;","import React, { Component } from 'react';\n\nclass Frontend extends Component {\n    render() {\n        return (\n            <div>\n                Frontend\n            </div>\n        );\n    }\n}\n\nexport default Frontend;","import React, { Component } from 'react';\n\nclass Android extends Component {\n    render() {\n        return (\n            <div>\n                android\n            </div>\n        );\n    }\n}\n\nexport default Android;","import React, { Component } from 'react';\nimport './layout.css'\nclass Layout extends Component {\n    render() {\n        const {className,children}=this.props\n        return (\n            // 布局组件\n            <div className={`layout ${className}`}>\n                <div className=\"layout-inner\">\n                {/* 我们要接受一个 children ,这里的children就是 layout 下的所有元素*/}\n                {children}\n                </div>    \n            </div>\n        );\n    }\n}\n\nexport default Layout;\nLayout.defaultProps={\n    className :''\n}","import React, { Component } from 'react';\nimport './home.css'\nimport { NavLink,Route } from 'react-router-dom';\nimport Recommend from '../Recommend/Recommend'\nimport Frontend from '../Frontend/Frontend'\nimport Andriod from '../Andriod/Android'\nimport Layout from '../Layout/Layout';\nclass Home extends Component {\n    render() {\n        return (\n            <Layout className=\"home\">\n                <div className=\"topics\">\n                    <h3>热门文章</h3>\n                    <ul className=\"topic-list\">\n                        <li><NavLink to=\"/\" exact >推荐</NavLink></li>\n                        <li><NavLink to=\"/home/frontend\">前端</NavLink></li>\n                        <li><NavLink to=\"/home/andriod\">Andriod</NavLink></li>\n                        <li><NavLink to=\"/home/end\">后端</NavLink></li>\n                        <li><NavLink to=\"/home/AI\">人工智能</NavLink></li>\n                        <li><NavLink to=\"/home/IOS\">IOS</NavLink></li>\n                        <li><NavLink to=\"/home/source\">工具资源</NavLink></li>\n                        <li><NavLink to=\"/home/read\">阅读</NavLink></li>\n                        <li><NavLink to=\"/home/yunwei\">运维</NavLink></li>\n                    </ul>\n                </div>\n                <div className=\"content\">\n                    <Route component={Recommend} path=\"/\" exact/>\n                    <Route component={Andriod} path=\"/home/frontend\"/>\n                    <Route component={Frontend} path=\"/home/andriod\"/>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './activity.css'\nimport Layout from '../Layout/Layout';\nclass Activity extends Component {\n    render() {\n        return (\n            <Layout>\n                activity\n            </Layout>\n        );\n    }\n}\n\nexport default Activity;","import React, { Component } from 'react';\nimport './state.css'\nimport Layout from '../Layout/Layout';\nclass State extends Component {\n    render() {\n        return (\n            <Layout>\n                state\n            </Layout>\n        );\n    }\n}\n\nexport default State;","import React, { Component } from 'react';\n\nclass Post extends Component {\n    state = {\n        post:null\n    }\n    componentDidMount() {\n        const {match} = this.props\n        const postId = parseInt(match.params.postId)\n        this.setState({\n            post:{\n                postId:postId\n            }\n        })\n    }\n    render() {\n        const {post} = this.state\n        \n        return (\n                post == null?<div>waiting...</div>:<article>\n                <h1>title</h1>\n                <p>id:{post.postId}</p>\n            </article>\n        );\n    }\n}\n\nexport default Post;","import React, { Component } from 'react';\nimport './error.css'\nimport { Link } from 'react-router-dom';\nimport Layout from '../Layout/Layout';\nclass Error extends Component {\n    render() {\n        return (\n            <Layout>\n              <div className=\"where-is-pandafish\">\n              <img className=\"bg\" src=\"https://b-gold-cdn.xitu.io/v3/static/img/bg.1f516b3.png\" alt=\"\"/>\n              <img className=\"panda\" src=\"https://b-gold-cdn.xitu.io/v3/static/img/panfish.9be67f5.png\" alt=\"\"/>\n              <img className=\"sea\" src=\"https://b-gold-cdn.xitu.io/v3/static/img/sea.892cf5d.png\" alt=\"\"/>\n              <img className=\"lang\" src=\"https://b-gold-cdn.xitu.io/v3/static/img/spray.bc638d2.png\" alt=\"\"/>\n              </div>  \n              <Link to=\"/\" exact className=\"back\">返回首页</Link>\n            </Layout>\n        );\n    }\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport { Route,Switch ,Redirect} from 'react-router-dom';\nimport Home from '../Home/Home';\nimport Activity from '../Activity/Activity';\nimport State from '../State/State';\nimport Post from '../Post/Post'\nimport Errors from '../Error/Error'\nclass Main extends Component {\n    render() {\n        return (\n            <>\n            {/* Home 下的路由不能写 exact 因为写了点里面的内容以后就会 跳转了.此种情况用 switch*/}\n            {/* 写在 switch 下的路由 Route 只能匹配一个 */}\n            <Switch>\n                <Route component={Activity} path=\"/activity\"/>\n                <Route component={State} path=\"/state\"/>\n                {/* 所有的文章都跳到一个路由下,所以是动态路由 */}\n                <Route component={Post} path=\"/post/:postId\"/>\n                <Route component={Errors} path=\"/404\"/> \n                {/* render 属性值是一个函数,该函数的返回值必须是一个组件作为路由组件,相当于 component.该函数默认接受一个参数,这个参数就是路由传递的 props. */}\n                <Route path=\"/*\" render= {props =>{\n                    const {pathname} = props.location\n                    if(pathname === '/' || pathname.indexOf('home/') !== -1){\n                        return <Home />\n                    }else{\n                        return <Redirect from=\"/*\" to=\"/404\"/>\n                    }\n                }\n                \n                }/> \n                \n            </Switch>  \n            </>\n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './Static/global.css'\nimport './app.css'\nimport './Header/Header.js'\nimport Header from './Header/Header.js';\nimport './Main/Main'\nimport Main from './Main/Main';\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <>\n          <Header />\n          <Main />\n        </>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}